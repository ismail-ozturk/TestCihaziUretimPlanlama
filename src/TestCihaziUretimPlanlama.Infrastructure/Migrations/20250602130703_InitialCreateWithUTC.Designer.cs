// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestCihaziUretimPlanlama.Infrastructure.Data;

#nullable disable

namespace TestCihaziUretimPlanlama.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602130703_InitialCreateWithUTC")]
    partial class InitialCreateWithUTC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique()
                        .HasDatabaseName("IX_Departmanlar_Ad");

                    b.ToTable("Departmanlar", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "PMD Test Departmanı",
                            Ad = "PMD",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5456),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "CNC İşleme Departmanı",
                            Ad = "CNC",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5458),
                            IsDeleted = false
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Test Tamir Bakım Departmanı",
                            Ad = "Teknik",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5459),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Gorev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Sure")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId")
                        .HasDatabaseName("IX_Gorevler_DepartmanId");

                    b.HasIndex("DepartmanId", "Ad")
                        .IsUnique()
                        .HasDatabaseName("IX_Gorevler_DepartmanId_Ad");

                    b.ToTable("Gorevler", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "PV hazırlama işlemleri",
                            Ad = "PV Hazırlama",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5576),
                            DepartmanId = 1,
                            IsDeleted = false,
                            Sure = 32
                        },
                        new
                        {
                            Id = 2,
                            Aciklama = "Şematik çizim ve malzeme kontrol işlemleri",
                            Ad = "Şematik Çizme ve Eksik Malzeme Kontrolü",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5578),
                            DepartmanId = 1,
                            IsDeleted = false,
                            Sure = 32
                        },
                        new
                        {
                            Id = 3,
                            Aciklama = "Test programı hazırlama işlemleri",
                            Ad = "Test Programı Hazırlama",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5579),
                            DepartmanId = 1,
                            IsDeleted = false,
                            Sure = 40
                        },
                        new
                        {
                            Id = 7,
                            Aciklama = "Kablolama ve el ölçümü kontrol işlemleri",
                            Ad = "Kablolama ve test adımları tek adım modunda kontrol (El Ölçümü)",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5581),
                            DepartmanId = 1,
                            IsDeleted = false,
                            Sure = 5
                        },
                        new
                        {
                            Id = 5,
                            Aciklama = "CNC ile PCB sabitleme işlemleri",
                            Ad = "CNC Test Cihazı PCB Sabitleme",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5582),
                            DepartmanId = 2,
                            IsDeleted = false,
                            Sure = 3
                        },
                        new
                        {
                            Id = 12,
                            Aciklama = "CNC ile üst baskı işlemleri",
                            Ad = "CNC Test Cihazı Üst Baskı",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5583),
                            DepartmanId = 2,
                            IsDeleted = false,
                            Sure = 8
                        },
                        new
                        {
                            Id = 16,
                            Aciklama = "CNC manuel işleme",
                            Ad = "CNC Manuel İş",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5585),
                            DepartmanId = 2,
                            IsDeleted = false,
                            Sure = 32
                        },
                        new
                        {
                            Id = 17,
                            Aciklama = "CNC konsept adaptör işleme",
                            Ad = "CNC Konsept Adaptör İşleme",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5586),
                            DepartmanId = 2,
                            IsDeleted = false,
                            Sure = 32
                        },
                        new
                        {
                            Id = 18,
                            Aciklama = "CNC test cihazı plakası işleme",
                            Ad = "CNC Test Cihazı Plakası İşleme",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5587),
                            DepartmanId = 2,
                            IsDeleted = false,
                            Sure = 16
                        },
                        new
                        {
                            Id = 19,
                            Aciklama = "CNC test cihazı kontrol ve ayar işlemleri",
                            Ad = "CNC Test Cihazı Kontrol / Ayar",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5588),
                            DepartmanId = 2,
                            IsDeleted = false,
                            Sure = 32
                        },
                        new
                        {
                            Id = 4,
                            Aciklama = "Malzeme hazırlık işlemleri",
                            Ad = "Malzeme Hazırlık",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5590),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 3
                        },
                        new
                        {
                            Id = 6,
                            Aciklama = "Teknik kontrol listesi işlemleri",
                            Ad = "Teknik Checklist",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5591),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 8
                        },
                        new
                        {
                            Id = 8,
                            Aciklama = "Test programı kontrol ve iğne yerleştirme",
                            Ad = "TP Kontrol ve İğne yerleştirme",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5592),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 4
                        },
                        new
                        {
                            Id = 9,
                            Aciklama = "Pertenax ve devre hazırlık işlemleri",
                            Ad = "Pertenax ve Devre Hazırlığı",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5593),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 10
                        },
                        new
                        {
                            Id = 10,
                            Aciklama = "Malzeme sağlamlık test işlemleri",
                            Ad = "Malzeme Sağlamlık Testi",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5595),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 2
                        },
                        new
                        {
                            Id = 11,
                            Aciklama = "Ürün etiketleme işlemleri",
                            Ad = "Etiketleme",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5596),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 3
                        },
                        new
                        {
                            Id = 13,
                            Aciklama = "Test cihazı kablolama ve montaj işlemleri",
                            Ad = "Test Cihazı Kablolama ve Montaj",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5597),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 24
                        },
                        new
                        {
                            Id = 14,
                            Aciklama = "Test cihazı malzeme yerleştirme işlemleri",
                            Ad = "Test Cihazı Malzeme Yerleştirme",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5598),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 3
                        },
                        new
                        {
                            Id = 15,
                            Aciklama = "Şema ve test cihazı kontrol işlemleri",
                            Ad = "Şema ve Test Cihazı Kontrolü",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5599),
                            DepartmanId = 3,
                            IsDeleted = false,
                            Sure = 15
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique()
                        .HasDatabaseName("IX_Kategoriler_Ad");

                    b.ToTable("Kategoriler", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aciklama = "İğne plakası üretim kategorisi",
                            Ad = "İğne Plakası",
                            Aktif = true,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5621),
                            IsDeleted = false
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevBagimlilik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArdilKategoriGorevSablonuId")
                        .HasColumnType("integer");

                    b.Property<int>("BagimlilikTipi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GecikmeGunu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OncuKategoriGorevSablonuId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ArdilKategoriGorevSablonuId");

                    b.HasIndex("OncuKategoriGorevSablonuId", "ArdilKategoriGorevSablonuId")
                        .IsUnique()
                        .HasDatabaseName("IX_KategoriGorevBagimliliklari_Oncu_Ardil");

                    b.ToTable("KategoriGorevBagimliliklari", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ArdilKategoriGorevSablonuId = 2,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5697),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 1
                        },
                        new
                        {
                            Id = 2,
                            ArdilKategoriGorevSablonuId = 3,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5698),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 2
                        },
                        new
                        {
                            Id = 3,
                            ArdilKategoriGorevSablonuId = 4,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5699),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 1
                        },
                        new
                        {
                            Id = 4,
                            ArdilKategoriGorevSablonuId = 5,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5700),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 2
                        },
                        new
                        {
                            Id = 5,
                            ArdilKategoriGorevSablonuId = 5,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5701),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 4
                        },
                        new
                        {
                            Id = 6,
                            ArdilKategoriGorevSablonuId = 6,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5702),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 5
                        },
                        new
                        {
                            Id = 7,
                            ArdilKategoriGorevSablonuId = 7,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5703),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 6
                        },
                        new
                        {
                            Id = 8,
                            ArdilKategoriGorevSablonuId = 8,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5704),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 7
                        },
                        new
                        {
                            Id = 9,
                            ArdilKategoriGorevSablonuId = 9,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5705),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 8
                        },
                        new
                        {
                            Id = 10,
                            ArdilKategoriGorevSablonuId = 10,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5707),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 9
                        },
                        new
                        {
                            Id = 11,
                            ArdilKategoriGorevSablonuId = 11,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5708),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 10
                        },
                        new
                        {
                            Id = 12,
                            ArdilKategoriGorevSablonuId = 12,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5709),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 11
                        },
                        new
                        {
                            Id = 13,
                            ArdilKategoriGorevSablonuId = 13,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5710),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 12
                        },
                        new
                        {
                            Id = 14,
                            ArdilKategoriGorevSablonuId = 14,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5711),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 13
                        },
                        new
                        {
                            Id = 15,
                            ArdilKategoriGorevSablonuId = 15,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5714),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 3
                        },
                        new
                        {
                            Id = 16,
                            ArdilKategoriGorevSablonuId = 15,
                            BagimlilikTipi = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5715),
                            GecikmeGunu = 0,
                            IsDeleted = false,
                            OncuKategoriGorevSablonuId = 14
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<int?>("OzelSure")
                        .HasColumnType("integer");

                    b.Property<int>("Sira")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.HasIndex("KategoriId", "GorevId")
                        .IsUnique()
                        .HasDatabaseName("IX_KategoriGorevSablonlari_KategoriId_GorevId");

                    b.HasIndex("KategoriId", "Sira")
                        .IsUnique()
                        .HasDatabaseName("IX_KategoriGorevSablonlari_KategoriId_Sira");

                    b.ToTable("KategoriGorevSablonlari", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5638),
                            GorevId = 1,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 32,
                            Sira = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5639),
                            GorevId = 2,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 32,
                            Sira = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5640),
                            GorevId = 3,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 40,
                            Sira = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5642),
                            GorevId = 18,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 16,
                            Sira = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5643),
                            GorevId = 8,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 4,
                            Sira = 5
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5645),
                            GorevId = 4,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 3,
                            Sira = 6
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5646),
                            GorevId = 9,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 10,
                            Sira = 7
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5648),
                            GorevId = 10,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 2,
                            Sira = 8
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5649),
                            GorevId = 12,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 8,
                            Sira = 9
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5650),
                            GorevId = 14,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 3,
                            Sira = 10
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5651),
                            GorevId = 13,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 24,
                            Sira = 11
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5653),
                            GorevId = 11,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 3,
                            Sira = 12
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5654),
                            GorevId = 15,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 15,
                            Sira = 13
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5656),
                            GorevId = 6,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 8,
                            Sira = 14
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5657),
                            GorevId = 7,
                            IsDeleted = false,
                            KategoriId = 1,
                            OzelSure = 5,
                            Sira = 15
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("CalismaSekli")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DonerVardiyaBaslangicTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DonerVardiyaBaslangicTipi")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PersonelNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("SabitVardiyaTipi")
                        .HasColumnType("integer");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId")
                        .HasDatabaseName("IX_Personeller_DepartmanId");

                    b.HasIndex("PersonelNo")
                        .IsUnique()
                        .HasDatabaseName("IX_Personeller_PersonelNo");

                    b.ToTable("Personeller", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Ad = "Kaan",
                            Aktif = true,
                            CalismaSekli = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5740),
                            DepartmanId = 1,
                            IsDeleted = false,
                            PersonelNo = "P001",
                            SabitVardiyaTipi = 1,
                            Soyad = "Karamancı"
                        },
                        new
                        {
                            Id = 2,
                            Ad = "Mert",
                            Aktif = true,
                            CalismaSekli = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5742),
                            DepartmanId = 1,
                            IsDeleted = false,
                            PersonelNo = "P002",
                            SabitVardiyaTipi = 1,
                            Soyad = "Göncü"
                        },
                        new
                        {
                            Id = 3,
                            Ad = "Kadir",
                            Aktif = true,
                            CalismaSekli = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5747),
                            DepartmanId = 2,
                            DonerVardiyaBaslangicTarihi = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonerVardiyaBaslangicTipi = 3,
                            IsDeleted = false,
                            PersonelNo = "P003",
                            Soyad = "Vural"
                        },
                        new
                        {
                            Id = 4,
                            Ad = "Ramazan",
                            Aktif = true,
                            CalismaSekli = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5749),
                            DepartmanId = 2,
                            IsDeleted = false,
                            PersonelNo = "P004",
                            SabitVardiyaTipi = 2,
                            Soyad = "Öztürk"
                        },
                        new
                        {
                            Id = 5,
                            Ad = "Adem",
                            Aktif = true,
                            CalismaSekli = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5750),
                            DepartmanId = 2,
                            IsDeleted = false,
                            PersonelNo = "P005",
                            SabitVardiyaTipi = 2,
                            Soyad = "Yüksel"
                        },
                        new
                        {
                            Id = 6,
                            Ad = "Sinan",
                            Aktif = true,
                            CalismaSekli = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5752),
                            DepartmanId = 3,
                            DonerVardiyaBaslangicTarihi = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonerVardiyaBaslangicTipi = 3,
                            IsDeleted = false,
                            PersonelNo = "P006",
                            Soyad = "Tekyol"
                        },
                        new
                        {
                            Id = 7,
                            Ad = "Emre",
                            Aktif = true,
                            CalismaSekli = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5754),
                            DepartmanId = 3,
                            DonerVardiyaBaslangicTarihi = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonerVardiyaBaslangicTipi = 4,
                            IsDeleted = false,
                            PersonelNo = "P007",
                            Soyad = "Kahveci"
                        },
                        new
                        {
                            Id = 8,
                            Ad = "Nuri",
                            Aktif = true,
                            CalismaSekli = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5755),
                            DepartmanId = 3,
                            IsDeleted = false,
                            PersonelNo = "P008",
                            SabitVardiyaTipi = 1,
                            Soyad = "Ersipahi"
                        },
                        new
                        {
                            Id = 9,
                            Ad = "Mustafa",
                            Aktif = true,
                            CalismaSekli = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5757),
                            DepartmanId = 1,
                            DonerVardiyaBaslangicTarihi = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonerVardiyaBaslangicTipi = 3,
                            IsDeleted = false,
                            PersonelNo = "P009",
                            Soyad = "Durgun"
                        },
                        new
                        {
                            Id = 10,
                            Ad = "Mehmet Ali",
                            Aktif = true,
                            CalismaSekli = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5759),
                            DepartmanId = 1,
                            DonerVardiyaBaslangicTarihi = new DateTime(2025, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DonerVardiyaBaslangicTipi = 4,
                            IsDeleted = false,
                            PersonelNo = "P010",
                            Soyad = "Binici"
                        },
                        new
                        {
                            Id = 11,
                            Ad = "İbrahim",
                            Aktif = true,
                            CalismaSekli = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5760),
                            DepartmanId = 3,
                            IsDeleted = false,
                            PersonelNo = "P011",
                            SabitVardiyaTipi = 1,
                            Soyad = "Gelen"
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelGorevYetkinlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.HasIndex("PersonelId", "GorevId")
                        .IsUnique()
                        .HasDatabaseName("IX_PersonelGorevYetkinlikleri_PersonelId_GorevId");

                    b.ToTable("PersonelGorevYetkinlikleri", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5769),
                            GorevId = 1,
                            IsDeleted = false,
                            PersonelId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5770),
                            GorevId = 2,
                            IsDeleted = false,
                            PersonelId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5771),
                            GorevId = 3,
                            IsDeleted = false,
                            PersonelId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5772),
                            GorevId = 7,
                            IsDeleted = false,
                            PersonelId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5775),
                            GorevId = 1,
                            IsDeleted = false,
                            PersonelId = 2
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5776),
                            GorevId = 2,
                            IsDeleted = false,
                            PersonelId = 2
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5776),
                            GorevId = 3,
                            IsDeleted = false,
                            PersonelId = 2
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5777),
                            GorevId = 7,
                            IsDeleted = false,
                            PersonelId = 2
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5779),
                            GorevId = 5,
                            IsDeleted = false,
                            PersonelId = 3
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5780),
                            GorevId = 12,
                            IsDeleted = false,
                            PersonelId = 3
                        },
                        new
                        {
                            Id = 11,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5781),
                            GorevId = 16,
                            IsDeleted = false,
                            PersonelId = 3
                        },
                        new
                        {
                            Id = 12,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5781),
                            GorevId = 17,
                            IsDeleted = false,
                            PersonelId = 3
                        },
                        new
                        {
                            Id = 13,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5782),
                            GorevId = 18,
                            IsDeleted = false,
                            PersonelId = 3
                        },
                        new
                        {
                            Id = 14,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5783),
                            GorevId = 19,
                            IsDeleted = false,
                            PersonelId = 3
                        },
                        new
                        {
                            Id = 15,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5785),
                            GorevId = 5,
                            IsDeleted = false,
                            PersonelId = 4
                        },
                        new
                        {
                            Id = 16,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5785),
                            GorevId = 5,
                            IsDeleted = false,
                            PersonelId = 5
                        },
                        new
                        {
                            Id = 17,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5786),
                            GorevId = 4,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 18,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5787),
                            GorevId = 8,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 19,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5788),
                            GorevId = 9,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 20,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5789),
                            GorevId = 10,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 21,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5790),
                            GorevId = 11,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 22,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5790),
                            GorevId = 13,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 23,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5791),
                            GorevId = 14,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 24,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5792),
                            GorevId = 15,
                            IsDeleted = false,
                            PersonelId = 6
                        },
                        new
                        {
                            Id = 25,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5806),
                            GorevId = 4,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 26,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5807),
                            GorevId = 8,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 27,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5807),
                            GorevId = 9,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 28,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5808),
                            GorevId = 10,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 29,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5809),
                            GorevId = 11,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 30,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5810),
                            GorevId = 13,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 31,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5811),
                            GorevId = 14,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 32,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5812),
                            GorevId = 15,
                            IsDeleted = false,
                            PersonelId = 7
                        },
                        new
                        {
                            Id = 33,
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5813),
                            GorevId = 6,
                            IsDeleted = false,
                            PersonelId = 8
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelIzin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId")
                        .HasDatabaseName("IX_PersonelIzinleri_PersonelId");

                    b.HasIndex("BaslangicTarihi", "BitisTarihi")
                        .HasDatabaseName("IX_PersonelIzinleri_Tarih");

                    b.ToTable("PersonelIzinleri", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PlanDisiTarih", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("TekrarliMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("Tarih")
                        .HasDatabaseName("IX_PlanDisiTarihler_Tarih");

                    b.ToTable("PlanDisiTarihler", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("IstenilenBaslangicTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<bool>("KategoriSablonuKullan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Musteri")
                        .HasColumnType("integer");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Oncelik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(5);

                    b.Property<DateTime?>("SonTeslimTarihi")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UretimNumarasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Durum")
                        .HasDatabaseName("IX_Siparisler_Durum");

                    b.HasIndex("IstenilenBaslangicTarihi")
                        .HasDatabaseName("IX_Siparisler_IstenilenBaslangicTarihi");

                    b.HasIndex("KategoriId");

                    b.HasIndex("UretimNumarasi")
                        .IsUnique()
                        .HasDatabaseName("IX_Siparisler_UretimNumarasi");

                    b.ToTable("Siparisler", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevBagimlilik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArdilUretimGoreviId")
                        .HasColumnType("integer");

                    b.Property<int>("BagimlilikTipi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GecikmeGunu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OncuUretimGoreviId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("ArdilUretimGoreviId");

                    b.HasIndex("OncuUretimGoreviId", "ArdilUretimGoreviId")
                        .IsUnique()
                        .HasDatabaseName("IX_UretimGorevBagimliliklari_Oncu_Ardil");

                    b.ToTable("UretimGorevBagimliliklari", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AtananPersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GercekBaslangic")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("GercekBitis")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("PlanlananBaslangic")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime?>("PlanlananBitis")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("SiparisId")
                        .HasColumnType("integer");

                    b.Property<int>("Sure")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.HasIndex("AtananPersonelId")
                        .HasDatabaseName("IX_UretimGorevleri_AtananPersonelId");

                    b.HasIndex("Durum")
                        .HasDatabaseName("IX_UretimGorevleri_Durum");

                    b.HasIndex("GorevId");

                    b.HasIndex("PlanlananBaslangic")
                        .HasDatabaseName("IX_UretimGorevleri_PlanlananBaslangic");

                    b.HasIndex("SiparisId")
                        .HasDatabaseName("IX_UretimGorevleri_SiparisId");

                    b.ToTable("UretimGorevleri", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.VardiyaTanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("interval");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("CumartesiCalismasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("VardiyaTipi")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VardiyaTipi")
                        .IsUnique()
                        .HasDatabaseName("IX_VardiyaTanimlari_VardiyaTipi");

                    b.ToTable("VardiyaTanimlari", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Aktif = true,
                            BaslangicSaati = new TimeSpan(0, 8, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 17, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5523),
                            CumartesiCalismasi = false,
                            IsDeleted = false,
                            VardiyaTipi = 1
                        },
                        new
                        {
                            Id = 2,
                            Aktif = true,
                            BaslangicSaati = new TimeSpan(0, 7, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 15, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5525),
                            CumartesiCalismasi = true,
                            IsDeleted = false,
                            VardiyaTipi = 2
                        },
                        new
                        {
                            Id = 3,
                            Aktif = true,
                            BaslangicSaati = new TimeSpan(0, 7, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 15, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5526),
                            CumartesiCalismasi = true,
                            IsDeleted = false,
                            VardiyaTipi = 3
                        },
                        new
                        {
                            Id = 4,
                            Aktif = true,
                            BaslangicSaati = new TimeSpan(0, 15, 0, 0, 0),
                            BitisSaati = new TimeSpan(0, 23, 0, 0, 0),
                            CreatedDate = new DateTime(2025, 6, 2, 13, 7, 3, 539, DateTimeKind.Utc).AddTicks(5527),
                            CumartesiCalismasi = false,
                            IsDeleted = false,
                            VardiyaTipi = 4
                        });
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Gorev", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Departman", "Departman")
                        .WithMany("Gorevler")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevBagimlilik", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", "ArdilGorev")
                        .WithMany("OncuBagimliliklar")
                        .HasForeignKey("ArdilKategoriGorevSablonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", "OncuGorev")
                        .WithMany("ArdilBagimliliklar")
                        .HasForeignKey("OncuKategoriGorevSablonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArdilGorev");

                    b.Navigation("OncuGorev");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Gorev", "Gorev")
                        .WithMany("KategoriSablonlari")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Kategori", "Kategori")
                        .WithMany("GorevSablonlari")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Personel", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Departman", "Departman")
                        .WithMany("Personeller")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelGorevYetkinlik", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Gorev", "Gorev")
                        .WithMany("PersonelYetkinlikleri")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Personel", "Personel")
                        .WithMany("GorevYetkinlikleri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelIzin", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Personel", "Personel")
                        .WithMany("Izinler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Siparis", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Kategori", "Kategori")
                        .WithMany("Siparisler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevBagimlilik", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", "ArdilGorev")
                        .WithMany("OncuBagimliliklar")
                        .HasForeignKey("ArdilUretimGoreviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", "OncuGorev")
                        .WithMany("ArdilBagimliliklar")
                        .HasForeignKey("OncuUretimGoreviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArdilGorev");

                    b.Navigation("OncuGorev");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Personel", "AtananPersonel")
                        .WithMany("AtanmisGorevler")
                        .HasForeignKey("AtananPersonelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Gorev", "Gorev")
                        .WithMany("UretimGorevleri")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Siparis", "Siparis")
                        .WithMany("UretimGorevleri")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtananPersonel");

                    b.Navigation("Gorev");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Departman", b =>
                {
                    b.Navigation("Gorevler");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Gorev", b =>
                {
                    b.Navigation("KategoriSablonlari");

                    b.Navigation("PersonelYetkinlikleri");

                    b.Navigation("UretimGorevleri");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Kategori", b =>
                {
                    b.Navigation("GorevSablonlari");

                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", b =>
                {
                    b.Navigation("ArdilBagimliliklar");

                    b.Navigation("OncuBagimliliklar");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Personel", b =>
                {
                    b.Navigation("AtanmisGorevler");

                    b.Navigation("GorevYetkinlikleri");

                    b.Navigation("Izinler");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Siparis", b =>
                {
                    b.Navigation("UretimGorevleri");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", b =>
                {
                    b.Navigation("ArdilBagimliliklar");

                    b.Navigation("OncuBagimliliklar");
                });
#pragma warning restore 612, 618
        }
    }
}
