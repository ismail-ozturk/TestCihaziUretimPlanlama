// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestCihaziUretimPlanlama.Infrastructure.Data;

#nullable disable

namespace TestCihaziUretimPlanlama.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250602084652_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Departman", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique()
                        .HasDatabaseName("IX_Departmanlar_Ad");

                    b.ToTable("Departmanlar", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Gorev", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("Sure")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId")
                        .HasDatabaseName("IX_Gorevler_DepartmanId");

                    b.HasIndex("DepartmanId", "Ad")
                        .IsUnique()
                        .HasDatabaseName("IX_Gorevler_DepartmanId_Ad");

                    b.ToTable("Gorevler", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Kategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Ad")
                        .IsUnique()
                        .HasDatabaseName("IX_Kategoriler_Ad");

                    b.ToTable("Kategoriler", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevBagimlilik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArdilKategoriGorevSablonuId")
                        .HasColumnType("integer");

                    b.Property<int>("BagimlilikTipi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GecikmeGunu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OncuKategoriGorevSablonuId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ArdilKategoriGorevSablonuId");

                    b.HasIndex("OncuKategoriGorevSablonuId", "ArdilKategoriGorevSablonuId")
                        .IsUnique()
                        .HasDatabaseName("IX_KategoriGorevBagimliliklari_Oncu_Ardil");

                    b.ToTable("KategoriGorevBagimliliklari", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<int?>("OzelSure")
                        .HasColumnType("integer");

                    b.Property<int>("Sira")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.HasIndex("KategoriId", "GorevId")
                        .IsUnique()
                        .HasDatabaseName("IX_KategoriGorevSablonlari_KategoriId_GorevId");

                    b.HasIndex("KategoriId", "Sira")
                        .IsUnique()
                        .HasDatabaseName("IX_KategoriGorevSablonlari_KategoriId_Sira");

                    b.ToTable("KategoriGorevSablonlari", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Personel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int>("CalismaSekli")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DepartmanId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DonerVardiyaBaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("DonerVardiyaBaslangicTipi")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("PersonelNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<int?>("SabitVardiyaTipi")
                        .HasColumnType("integer");

                    b.Property<string>("Soyad")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("DepartmanId")
                        .HasDatabaseName("IX_Personeller_DepartmanId");

                    b.HasIndex("PersonelNo")
                        .IsUnique()
                        .HasDatabaseName("IX_Personeller_PersonelNo");

                    b.ToTable("Personeller", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelGorevYetkinlik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("GorevId");

                    b.HasIndex("PersonelId", "GorevId")
                        .IsUnique()
                        .HasDatabaseName("IX_PersonelGorevYetkinlikleri_PersonelId_GorevId");

                    b.ToTable("PersonelGorevYetkinlikleri", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelIzin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("PersonelId")
                        .HasDatabaseName("IX_PersonelIzinleri_PersonelId");

                    b.HasIndex("BaslangicTarihi", "BitisTarihi")
                        .HasDatabaseName("IX_PersonelIzinleri_Tarih");

                    b.ToTable("PersonelIzinleri", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PlanDisiTarih", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("TekrarliMi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("Tarih")
                        .HasDatabaseName("IX_PlanDisiTarihler_Tarih");

                    b.ToTable("PlanDisiTarihler", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Siparis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("IstenilenBaslangicTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("KategoriId")
                        .HasColumnType("integer");

                    b.Property<bool>("KategoriSablonuKullan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int>("Musteri")
                        .HasColumnType("integer");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<int>("Oncelik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(5);

                    b.Property<DateTime?>("SonTeslimTarihi")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("UretimNumarasi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.HasKey("Id");

                    b.HasIndex("Durum")
                        .HasDatabaseName("IX_Siparisler_Durum");

                    b.HasIndex("IstenilenBaslangicTarihi")
                        .HasDatabaseName("IX_Siparisler_IstenilenBaslangicTarihi");

                    b.HasIndex("KategoriId");

                    b.HasIndex("UretimNumarasi")
                        .IsUnique()
                        .HasDatabaseName("IX_Siparisler_UretimNumarasi");

                    b.ToTable("Siparisler", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevBagimlilik", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArdilUretimGoreviId")
                        .HasColumnType("integer");

                    b.Property<int>("BagimlilikTipi")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GecikmeGunu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasDefaultValue(0);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("OncuUretimGoreviId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("ArdilUretimGoreviId");

                    b.HasIndex("OncuUretimGoreviId", "ArdilUretimGoreviId")
                        .IsUnique()
                        .HasDatabaseName("IX_UretimGorevBagimliliklari_Oncu_Ardil");

                    b.ToTable("UretimGorevBagimliliklari", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("AtananPersonelId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Durum")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("GercekBaslangic")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("GercekBitis")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("GorevId")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Notlar")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<DateTime?>("PlanlananBaslangic")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("PlanlananBitis")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SiparisId")
                        .HasColumnType("integer");

                    b.Property<int>("Sure")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("AtananPersonelId")
                        .HasDatabaseName("IX_UretimGorevleri_AtananPersonelId");

                    b.HasIndex("Durum")
                        .HasDatabaseName("IX_UretimGorevleri_Durum");

                    b.HasIndex("GorevId");

                    b.HasIndex("PlanlananBaslangic")
                        .HasDatabaseName("IX_UretimGorevleri_PlanlananBaslangic");

                    b.HasIndex("SiparisId")
                        .HasDatabaseName("IX_UretimGorevleri_SiparisId");

                    b.ToTable("UretimGorevleri", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.VardiyaTanimi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Aktif")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<TimeSpan>("BaslangicSaati")
                        .HasColumnType("interval");

                    b.Property<TimeSpan>("BitisSaati")
                        .HasColumnType("interval");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("CumartesiCalismasi")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("VardiyaTipi")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("VardiyaTipi")
                        .IsUnique()
                        .HasDatabaseName("IX_VardiyaTanimlari_VardiyaTipi");

                    b.ToTable("VardiyaTanimlari", (string)null);
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Gorev", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Departman", "Departman")
                        .WithMany("Gorevler")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevBagimlilik", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", "ArdilGorev")
                        .WithMany("OncuBagimliliklar")
                        .HasForeignKey("ArdilKategoriGorevSablonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", "OncuGorev")
                        .WithMany("ArdilBagimliliklar")
                        .HasForeignKey("OncuKategoriGorevSablonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArdilGorev");

                    b.Navigation("OncuGorev");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Gorev", "Gorev")
                        .WithMany("KategoriSablonlari")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Kategori", "Kategori")
                        .WithMany("GorevSablonlari")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Personel", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Departman", "Departman")
                        .WithMany("Personeller")
                        .HasForeignKey("DepartmanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Departman");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelGorevYetkinlik", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Gorev", "Gorev")
                        .WithMany("PersonelYetkinlikleri")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Personel", "Personel")
                        .WithMany("GorevYetkinlikleri")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gorev");

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.PersonelIzin", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Personel", "Personel")
                        .WithMany("Izinler")
                        .HasForeignKey("PersonelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Personel");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Siparis", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Kategori", "Kategori")
                        .WithMany("Siparisler")
                        .HasForeignKey("KategoriId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Kategori");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevBagimlilik", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", "ArdilGorev")
                        .WithMany("OncuBagimliliklar")
                        .HasForeignKey("ArdilUretimGoreviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", "OncuGorev")
                        .WithMany("ArdilBagimliliklar")
                        .HasForeignKey("OncuUretimGoreviId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ArdilGorev");

                    b.Navigation("OncuGorev");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", b =>
                {
                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Personel", "AtananPersonel")
                        .WithMany("AtanmisGorevler")
                        .HasForeignKey("AtananPersonelId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Gorev", "Gorev")
                        .WithMany("UretimGorevleri")
                        .HasForeignKey("GorevId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("TestCihaziUretimPlanlama.Core.Entities.Siparis", "Siparis")
                        .WithMany("UretimGorevleri")
                        .HasForeignKey("SiparisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AtananPersonel");

                    b.Navigation("Gorev");

                    b.Navigation("Siparis");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Departman", b =>
                {
                    b.Navigation("Gorevler");

                    b.Navigation("Personeller");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Gorev", b =>
                {
                    b.Navigation("KategoriSablonlari");

                    b.Navigation("PersonelYetkinlikleri");

                    b.Navigation("UretimGorevleri");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Kategori", b =>
                {
                    b.Navigation("GorevSablonlari");

                    b.Navigation("Siparisler");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.KategoriGorevSablonu", b =>
                {
                    b.Navigation("ArdilBagimliliklar");

                    b.Navigation("OncuBagimliliklar");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Personel", b =>
                {
                    b.Navigation("AtanmisGorevler");

                    b.Navigation("GorevYetkinlikleri");

                    b.Navigation("Izinler");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.Siparis", b =>
                {
                    b.Navigation("UretimGorevleri");
                });

            modelBuilder.Entity("TestCihaziUretimPlanlama.Core.Entities.UretimGorevi", b =>
                {
                    b.Navigation("ArdilBagimliliklar");

                    b.Navigation("OncuBagimliliklar");
                });
#pragma warning restore 612, 618
        }
    }
}
